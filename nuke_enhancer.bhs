// nuke_mod.bhs

   /*||||*\
  // RoN  \\
 //  Nuke  \\
// Enhancer \\
\*||||||||||*/

// By Frankie
// 2020

// This script aims to make nuclear arms in Rise of Nations: Extended Edition much more deadly.
// Basically, ICBMs will devastate cities and render them completely useless for a duration of time (probably 10 minutes)
// All units and buildings will be destroyed, including any NEW units that enter the area, and any new buildings you
// attempt to build. (Sort of simulating nuclear fallout)

include "helper_library.bhs"

// You may fuck with these as you please
labels {
	// This value determines the amount of hit points that a building has to lose in one cycle to be considered "nuked". Default = 50
	HEALTH_DIFF_THRESHOLD = 50,
	// Number of seconds between Modern Age check calls. Default = 5 seconds
	AGE_CHECK_TIMER_DURATION = 5,
	// How often nukes are checked for. Determines one "cycle". Default = 3 seconds
	NUKE_WATCH_TIMER_DURATION = 3,
	// How long cities are affected by nuclear fallout in minutes. Default = 600 seconds
	FALLOUT_TIME_SECS = 600,
	// Don't touch this. Default = 30
	NUKE_FALLOUT_TIMER_DURATION = 5,
	// How much units/buildings within the fallout zone are damaged each cycle (%). Default = 34
	DAMAGE_PCT_PER_CYCLE = 34,
	// Radius of fallout effects from city center. Measured in tiles, apparently
	FALLOUT_EFFECT_RADIUS = 15
}

scenario {	
	// Array of City objects. Updated with each new city built
	static City[] city_list;
	
	run_once {
		set_game_msg_color("GREEN");
		print_game_msg("Fromkie's Nuke Enhancement Script is running! Standing by for Modern Age...");
		set_game_msg_color("WHITE");
		set_timer("age_check_timer", AGE_CHECK_TIMER_DURATION);	// TODO: Increase duration
	}
	
	// Trigger that checks if any player has reached the Modern Age. This is done because we don't need the script running for most of the game.
	// The parameter is the condition which will trigger this function, and here it is the expiration of the age_check_timer
	trigger check_age(timer_expired("age_check_timer")) {		
		int age_reached = false;
		
		for (int i = 1; i < 9; ++i) {
			if (at_least_age(i, 6)) {
				print_game_msg("Nation # " + i + " has reached the Modern Age! Script activated...");
				stop_timer("age_check_timer");
				disable_trigger("check_age");
				age_reached = true;
				
				// trigger main script here
				set_timer("nuke_watch_timer", NUKE_WATCH_TIMER_DURATION);
				set_timer("fallout_timer", NUKE_FALLOUT_TIMER_DURATION);
			}
		}
		if (age_reached == false) {
			enable_trigger("check_age");
			set_timer("age_check_timer", AGE_CHECK_TIMER_DURATION);	// TODO: Increase duration
		}
	}
	trigger nuke_fallout(timer_expired("fallout_timer")) {
		set_game_msg_color("GREEN");
		
		// This will run continuously, checking for cities that had their "nuked" flag set, and will create the nuclear fallout effects for those cities
		set_timer("fallout_timer", NUKE_FALLOUT_TIMER_DURATION);
		enable_trigger("nuke_fallout");
		
		for (int i = 0; i < city_list.length; i++) {
			if ( (city_list[i].time_nuked >= 0) && (time_sec() - city_list[i].time_nuked < FALLOUT_TIME_SECS) ) {
				// city has been nuked and it has been less than 10 minutes... Destroy all buildings + kill all units
				damage_all_in_city(city_list[i], DAMAGE_PCT_PER_CYCLE, FALLOUT_EFFECT_RADIUS);
			}
			if ( city_list[i].time_nuked >= 0 && (time_sec() - city_list[i].time_nuked > FALLOUT_TIME_SECS)) {
				city_list[i].time_nuked = -1;
				print_game_msg(city_list[i].name + " is now safe to enter!");
			}
		}
		set_game_msg_color("WHITE");
	}
	// This function will be triggered on a timer and will check for and identify cities that have just been nuked
	trigger nuke_watch(timer_expired("nuke_watch_timer")) {
		set_game_msg_color("GREEN");
		set_timer("nuke_watch_timer", NUKE_WATCH_TIMER_DURATION);
		enable_trigger("nuke_watch");

		// populate city_list with City structs
		for (int i = 1; i < 9; ++i) {	// i < 9 because it's 1-8. Duh.
			for (int j = 0; j < num_cities(i); j++) {
				string city_name = find_city_name(i);
				int city_id = find_city_id(city_name);
				int city_hp = object_health(i, city_id);

				City c;
				c.nation = i;
				c.name = city_name;
				c.id = city_id;
				c.last_hp = 100;
				c.hp = city_hp;
				c.time_nuked = -1;
				
				add_city(city_list, c);
			}
		}

		for (int m = 0; m < city_list.length; m++) {
			int old_health = city_list[m].last_hp;
			int new_health = city_list[m].hp;
			int difference = absl_int(new_health - old_health);
			
			if (difference > HEALTH_DIFF_THRESHOLD) {		// building lost more than half its health in 3 seconds, it was most likely nuked
					print_game_msg("Nation #" + city_list[m].nation + "'s City of " + city_list[m].name + " has been attacked with a nuclear weapon! Nuclear fallout is now in effect!");
					
					city_list[m].time_nuked = time_sec();
			}
		}
		
		// Set the last HP to the current HP for the next iteration. last_hp is not updated in the first for loop so this works :)
		for (int n = 0; n < city_list.length; n++) {
			city_list[n].last_hp = city_list[n].hp;
		}
		set_game_msg_color("WHITE");
	}
}
// Give money to these people -> https://www.artsbusinesscollaborative.org/asp-products/black-trans-protestors-emergency-fund/